# AutoU Email Classifier (Processador de E-mail com IA)

![Badge de Tecnologia](https://img.shields.io/badge/Tecnologia-Python%20%7C%20Flask-blue)
![Badge de IA](https://img.shields.io/badge/IA%20Model-HuggingFace-orange)
![Badge de Front-end](https://img.shields.io/badge/Front--end-HTML%20%7C%20CSS%20%7C%20JS-yellow)

---

## üí° Ideia e Prop√≥sito do Projeto

O **AutoU Email Classifier** √© uma ferramenta inteligente desenvolvida para aumentar a **produtividade** de profissionais que lidam com um alto volume de comunica√ß√µes por e-mail.

O objetivo principal √© **classificar automaticamente** o corpo de um e-mail em duas categorias chave:

1.  **Produtivo:** Requer a√ß√£o, resposta ou aten√ß√£o imediata.
2.  **Improdutivo:** Informa√ß√µes que podem ser arquivadas, lidas posteriormente, ou s√£o ru√≠do (ex: newsletters, notifica√ß√µes autom√°ticas, spam leve).

Al√©m da classifica√ß√£o, a ferramenta utiliza uma IA Generativa para criar uma **sugest√£o de resposta** imediata, economizando tempo na reda√ß√£o e mantendo o fluxo de trabalho √°gil.

---

## ‚ú® Funcionalidades Principais

* **Classifica√ß√£o Inteligente:** Determina se o e-mail √© **Produtivo** ou **Improdutivo**.
* **Gera√ß√£o de Resposta:** Cria uma sugest√£o de resposta concisa baseada no conte√∫do e na categoria do e-mail.
* **M√∫ltiplas Entradas:** Aceita o e-mail via **colagem direta de texto** ou **Upload de Arquivos (.txt e .pdf)**.
* **Interface Moderna (Dark Mode):** Experi√™ncia do usu√°rio agrad√°vel com um design escuro e responsivo, seguindo a identidade visual da marca (toques em laranja).
* **Feedback Visual:** Indicadores de carregamento e bot√µes de c√≥pia com feedback de sucesso.

---

## üß† Tecnologia de Intelig√™ncia Artificial

A intelig√™ncia do projeto √© impulsionada por modelos do **Hugging Face**, a plataforma l√≠der em Machine Learning de c√≥digo aberto.

| Fun√ß√£o | Modelo Hugging Face | Pipeline |
| :--- | :--- | :--- |
| **Classifica√ß√£o** | `text-classification` | Determina Produtivo/Improdutivo. |
| **Gera√ß√£o de Resposta** | `text2text-generation` (Ex: Bart ou T5) | Cria o texto da resposta sugerida. |

Utilizamos o pipeline **Zero-Shot Classification** para a classifica√ß√£o, permitindo que o modelo decida a categoria sem ter sido treinado especificamente nesses labels, garantindo **flexibilidade** e **efici√™ncia**.

---

## üõ†Ô∏è Arquitetura do Projeto

O projeto segue uma arquitetura **Backend-Driven** simples, utilizando Python e Flask:

| Componente | Linguagens/Tecnologias | Fun√ß√£o |
| :--- | :--- | :--- |
| **Backend (API)** | **Python, Flask, Transformers** | Roteamento, carregamento e execu√ß√£o dos modelos de IA, tratamento de erros e extra√ß√£o de texto de arquivos (.pdf via `PyPDF2`). |
| **Frontend (Interface)** | **HTML5, CSS3, JavaScript** | Interface de usu√°rio (UI) para colagem de texto e upload de arquivos. L√≥gica para enviar dados √† API e exibir os resultados dinamicamente. |
| **Rotas da API** | `/process` (POST), `/process_file` (POST) | Recebem o conte√∫do do e-mail (texto ou arquivo) e retornam a categoria e a resposta gerada pela IA em formato JSON. |

---

## üöÄ Instala√ß√£o e Execu√ß√£o Local

Para rodar este projeto em sua m√°quina local, siga os passos abaixo:

### Pr√©-requisitos

* Python 3.8+
* `pip` (Gerenciador de pacotes Python)

### 1. Clonar o Reposit√≥rio

```bash
git clone [https://www.youtube.com/watch?v=X49Wz3icO3E](https://www.youtube.com/watch?v=X49Wz3icO3E)
cd autou-email-processor


2. Configurar e Ativar o Ambiente Virtual 

# Cria o ambiente virtual
python -m venv venv

# Ativa√ß√£o do ambiente virtual:
# No Windows (cmd/PowerShell):
.\venv\Scripts\activate

# No Linux/macOS (Bash/Git Bash):
source venv/bin/activate


3. Instalar Depend√™ncias

pip install -r requirements.txt

4. Iniciar o Servidor Flask

python app.py